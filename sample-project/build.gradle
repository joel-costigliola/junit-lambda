apply plugin: 'java'

dependencies {
	testCompile(project(':sample-extension'))
	testCompile(project(':junit5-api'))
	testCompile("junit:junit:${junit4Version}")
	testCompile(project(':junit4-launcher-runner'))
	testRuntime(project(':junit5-engine'))
	testRuntime(project(':junit4-engine'))
}

task runSampleTestCases(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	classpath += project(':junit-console').sourceSets.main.runtimeClasspath
	main = 'org.junit.gen5.console.ConsoleRunner'
	args '--all' // 'com.example'
}

test {
	description = 'Runs JUnit unit tests.'
	dependsOn runSampleTestCases
	useJUnit()

	scanForTestClasses = false
	include(['**/*Tests.class', '**/*Test.class'])
	// Since we set scanForTestClasses to false, we need to filter out inner
	// classes with the "$" pattern; otherwise, using -Dtest.single=MyTests to
	// run MyTests by itself will fail if MyTests contains any inner classes.
	exclude(['**/Abstract*.class', '**/*$*'])
}
